; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "OperationPhrike"
#define MyAppVersion "0.8"
#define MyAppPublisher "FH Hagenberg SE13 "
#define MyAppExeName "GroundControl.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{65E7F666-C717-4B22-87B3-C337B6C9B04A}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
OutputDir=D:\
OutputBaseFilename=OperationPhrikeInstaller
Compression=lzma
SolidCompression=yes
ChangesEnvironment=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "D:\PhrikeSetup\OperationPhrike\GroundControl.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\PhrikeSetup\OperationPhrike\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "D:\PhrikeSetup\FFMPEG.msi"; DestDir: "{app}"; Flags: ignoreversion; AfterInstall: RunMSIInstaller('FFMPEG.msi')
Source: "D:\PhrikeSetup\KinectSDK-v2.0_1409-Setup.exe"; DestDir: "{app}"; Flags: ignoreversion; AfterInstall: RunKinectInstaller('KinectSDK-v2.0_1409-Setup.exe')     
Source: "D:\PhrikeSetup\Myo+Connect+Installer.exe"; DestDir: "{app}"; Flags: ignoreversion; AfterInstall: RunOtherInstaller('Myo+Connect+Installer.exe')
Source: "D:\PhrikeSetup\oculus_runtime_sdk_0.7.0.0_win.exe"; DestDir: "{app}"; Flags: ignoreversion; AfterInstall: RunOtherInstaller('oculus_runtime_sdk_0.7.0.0_win.exe')
Source: "D:\PhrikeSetup\Setup Screen Capturer Recorder v0.12.8.exe"; DestDir: "{app}"; Flags: ignoreversion; AfterInstall: RunOtherInstaller('Setup Screen Capturer Recorder v0.12.8.exe')

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent


[Code]
procedure RunOtherInstaller(S: String);
var
  ResultCode: Integer;
begin
  if not Exec(ExpandConstant('{app}\'+S+''), '', '', SW_SHOWNORMAL,
    ewWaitUntilTerminated, ResultCode)
  then
    MsgBox('Other installer failed to run!' + #13#10 +
      SysErrorMessage(ResultCode), mbError, MB_OK);

   if not ResultCode = 0 then
   begin
      MsgBox('Installation aborted!', mbError, MB_OK);
      WizardForm.Close;
   end;
end;

procedure RunMSIInstaller(S: String);
var
  ResultCode: Integer;
begin
  if not ShellExec('', 'msiexec',
  ExpandConstant('/I "{app}\'+S+'" /qb'),
  '', SW_SHOWNORMAL, ewWaitUntilTerminated, ResultCode)
  then
    MsgBox('Other installer failed to run!' + #13#10 +
      SysErrorMessage(ResultCode), mbError, MB_OK);
end;

procedure RunKinectInstaller(S: String);
var
  ResultCode: Integer;
begin
  if not Exec(ExpandConstant('{app}\'+S+''), '', '', SW_SHOWNORMAL,
    ewWaitUntilTerminated, ResultCode)
  then
    MsgBox('Other installer failed to run!' + #13#10 +
      SysErrorMessage(ResultCode), mbError, MB_OK);

   if not ResultCode = 0 then
   begin
      MsgBox('Installation aborted!', mbError, MB_OK);
      WizardForm.Close;
   end;

   if not RegKeyExists(HKLM64 , 'SOFTWARE\Microsoft\KinectSDK') then
   begin
    MsgBox('Installation aborted!', mbError, MB_OK);
    WizardForm.Close;
  end;

end;



